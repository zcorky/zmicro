#!/bin/bash

export BLACK="\e[30m"
export RED="\e[31m"
export GREEN="\e[32m"
export YELLOW="\e[33m"
export BLUE="\e[34m"
export PURPLE="\e[35m"
export CYAN="\e[36m"
export GRAY="\e[37m"
export ENDCOLOR="\e[0m"

if [ "$(os::is_macos)" = "true" ]; then
  RED="\033[31m"
  GREEN="\033[32m"
  YELLOW="\033[33m"
  GRAY="\033[37m"
  ENDCOLOR="\033[0m"
fi

color::success() {
  color::green $@
}

color::error() {
  color::red $@
}

color::warn() {
  color::yellow $@
}

color::disable() {
  color::gray $@
}

color::green() {
  # bash unbound variable: https://unix.stackexchange.com/questions/463034/bash-throws-error-line-8-1-unbound-variable
  set +u
  if [ "${NO_COLOR}" = "true" ]; then
    echo "$@"
    return
  fi

  if [ "$(os::is_support_color)" = "false" ]; then
    echo $@
    return
  fi

  echo -e "${GREEN}${@}${ENDCOLOR}"
}

color::red() {
  # bash unbound variable: https://unix.stackexchange.com/questions/463034/bash-throws-error-line-8-1-unbound-variable
  set +u
  if [ "${NO_COLOR}" = "true" ]; then
    echo "$@"
    return
  fi

  if [ "$(os::is_support_color)" = "false" ]; then
    echo $@
    return
  fi

  echo -e "${RED}${@}${ENDCOLOR}"
}

color::yellow() {
  # bash unbound variable: https://unix.stackexchange.com/questions/463034/bash-throws-error-line-8-1-unbound-variable
  set +u
  if [ "${NO_COLOR}" = "true" ]; then
    echo "$@"
    return
  fi

  if [ "$(os::is_support_color)" = "false" ]; then
    echo $@
    return
  fi

  echo -e "${YELLOW}${@}${ENDCOLOR}"
}

color::gray() {
  # bash unbound variable: https://unix.stackexchange.com/questions/463034/bash-throws-error-line-8-1-unbound-variable
  set +u
  if [ "${NO_COLOR}" = "true" ]; then
    echo "$@"
    return
  fi

  if [ "$(os::is_support_color)" = "false" ]; then
    echo $@
    return
  fi

  echo -e "${GRAY}${@}${ENDCOLOR}"
}

color::cyan() {
  # bash unbound variable: https://unix.stackexchange.com/questions/463034/bash-throws-error-line-8-1-unbound-variable
  set +u
  if [ "${NO_COLOR}" = "true" ]; then
    echo "$@"
    return
  fi

  if [ "$(os::is_support_color)" = "false" ]; then
    echo $@
    return
  fi

  echo -e "${CYAN}${@}${ENDCOLOR}"
}

color::blue() {
  # bash unbound variable: https://unix.stackexchange.com/questions/463034/bash-throws-error-line-8-1-unbound-variable
  set +u
  if [ "${NO_COLOR}" = "true" ]; then
    echo "$@"
    return
  fi

  if [ "$(os::is_support_color)" = "false" ]; then
    echo $@
    return
  fi

  echo -e "${BLUE}${@}${ENDCOLOR}"
}

color::purple() {
  # bash unbound variable: https://unix.stackexchange.com/questions/463034/bash-throws-error-line-8-1-unbound-variable
  set +u
  if [ "${NO_COLOR}" = "true" ]; then
    echo "$@"
    return
  fi

  if [ "$(os::is_support_color)" = "false" ]; then
    echo $@
    return
  fi

  echo -e "${PURPLE}${@}${ENDCOLOR}"
}

color::black() {
  # bash unbound variable: https://unix.stackexchange.com/questions/463034/bash-throws-error-line-8-1-unbound-variable
  set +u
  if [ "${NO_COLOR}" = "true" ]; then
    echo "$@"
    return
  fi

  if [ "$(os::is_support_color)" = "false" ]; then
    echo $@
    return
  fi

  echo -e "${BLACK}${@}${ENDCOLOR}"
}

export -f color::success
export -f color::error
export -f color::warn
export -f color::disable

export -f color::green
export -f color::red
export -f color::yellow
export -f color::gray
export -f color::cyan
export -f color::blue
export -f color::purple
export -f color::black
