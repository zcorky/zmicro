#!/bin/bash

DAYS_SECONDS_90=$((90 * 24 * 60 * 60))

log_init() {
  . $ZMICRO_CORE_PATH/os
  . $ZMICRO_CORE_PATH/color

  local current_user=$(os_username)

  if [ "$current_user" = "" ]; then
    log_error "log_init can not get current user."
    exit 1
  fi

  # @TODO
  if [ -z "$ZMICRO_LOG_PATH" ]; then
    ZMICRO_LOG_PATH=/var/log/zmicro
  fi

  # # echo "[init] config log"
  if [ ! -d $ZMICRO_LOG_PATH ]; then
    sudo mkdir -p $ZMICRO_LOG_PATH
    sudo chown -R $current_user $ZMICRO_LOG_PATH

    # @TODO load core os utils
    log_debug "[log_init] internal log current User: sudo chown -R $current_user $ZMICRO_LOG_PATH"
  fi

  if [ ! -d $ZMICRO_APP_LOGS_PATH ]; then
    sudo mkdir -p $ZMICRO_APP_LOGS_PATH
    sudo chown -R $current_user $ZMICRO_APP_LOGS_PATH

    log_debug "[log_init] logs current User: sudo chown -R $current_user $ZMICRO_LOG_PATH"
  fi

  if [ ! -w $ZMICRO_LOG_PATH ]; then
    sudo chown -R $current_user $ZMICRO_LOG_PATH
  fi

  if [ ! -w $ZMICRO_APP_LOGS_PATH ]; then
    sudo chown -R $current_user $ZMICRO_APP_LOGS_PATH
  fi

  log_debug "logs config done"
}

log_info() {
  echo -e "$(color_green ℹ) ${@}" | tee -a $ZMICRO_LOG_COMMON_PATH
}

log_debug() {
  echo -e $@ >>$ZMICRO_LOG_DEBUG_PATH
}

log_success() {
  echo "$(color_green ✔) ${@}" | tee -a $ZMICRO_LOG_COMMON_PATH
}

log_error() {
  echo "$(color_red ✖) ${@}" | tee -a $ZMICRO_LOG_ERROR_PATH
}

log_warn() {
  echo -e "$(color_yellow ⚠) ${@}" | tee -a $ZMICRO_LOG_COMMON_PATH
}

log() {
  # @TODO will remove custum blanks
  echo -e $@ | tee -a $ZMICRO_LOG_COMMON_PATH
  # log_info $@
}

log_timestamp() {
  echo -e "[$(timestamp)] $@"
}

log_command() {
  local command_path_with_seperator=$1

  # Run Command with log
  local base_command_path=$(echo $command_path_with_seperator | cut -d "#" -f 1)
  local command_fragments=$(echo $command_path_with_seperator | cut -d "#" -f 2)
  local command_args=$(echo $command_path_with_seperator | cut -d "#" -f 3-)
  # Init Script Path
  local init_path=$base_command_path/_init

  log_debug "[$(timestamp)]$(color_success [command] command path: $base_command_path $command_fragments $command_args)"
  log_debug "[$(timestamp)][command]"

  # log_debug "origin: $@"
  log_debug "[$(timestamp)][command] base_command_path: $base_command_path"
  log_debug "[$(timestamp)][command] command_fragments: $command_fragments"
  log_debug "[$(timestamp)][command] command_args: $command_args"
  log_debug "[$(timestamp)][command] init_path: $init_path"
  log_debug "[$(timestamp)][command]"

  # @TODO
  if [ "$command_fragments" = "unknown" ]; then
    echo "[error] found, but get_command_path error"
    exit 1
  fi

  command_path=$(get_command_path_with_fragments $base_command_path $command_fragments)

  echo -e "${GREEN}[$(timestamp)] $command_fragments start ...${ENDCOLOR}" >>$ZMICRO_LOG_COMMON_PATH

  log_debug [$(timestamp)]$(color_success "[command] final command path: $command_path")
  log_debug ""

  # Load Init
  if [ -f "$init_path" ]; then
    log_debug "[$(timestamp)][command] load init in $init_path"

    # . $init_path
    load_config_file $init_path
  fi

  # @TODO if use log command, donot record log, caused bug
  echo "$command_path" | grep "commands/_internal/log" >>/dev/null
  if [ "$?" = "0" ]; then
    $command_path $command_args
    exit_code=${PIPESTATUS[0]}
  else
    $command_path $command_args # | tee -a $ZMICRO_LOG_COMMON_PATH
    exit_code=${PIPESTATUS[0]}
    # echo "exit_code: $exit_code($command)"
  fi

  if [ "$exit_code" = "0" ]; then
    log_success "[$(timestamp)] $command_fragments done." >>/dev/null # >> $ZMICRO_LOG_COMMON_PATH
  else
    log_error "[$(timestamp)] $command_fragments error." >>$ZMICRO_LOG_COMMON_PATH
  fi

  exit $exit_code
}

log_update() {
  stage=$1 # START | END
  current_version=$(get_current_version)
  log_info "[$(timestamp)] ${stage} ${current_version} "
}

log_version() {
  local PREV=$1
  local CURRENT=$2

  if [ "$PREV" != "$CURRENT" ]; then
    log_info "[$(timestamp)][$CURRENT] ${PREV} => ${CURRENT}"
    log_success "update success: $CURRENT"
  else
    log_success "no changes: $CURRENT"
  fi
}

log_plugin_update_lock() {
  # format: plugin_name#timestamps
  # example: daemon#timestamps
  if [ -z "$plugin_name" ]; then
    log_error "[log_plugin_update_lock] plugin_name is required"
    exit 1
  fi

  local msg="$plugin_name#$(timestamp)"
  # sed -i "/^\s*$/d" $ZMICRO_LOCK_UPDATE_PATH

  # @TODO @TODO @TODO
}

# keep in 90d
log_clean_check() {
  local log_last_check=$ZMICRO_LOG_PATH/.last_clean

  # initialize
  if [ ! -f $log_last_check ]; then
    echo "$(timestamp)" | sudo tee $log_last_check >>/dev/null 2>&1

    # clean
    log_clean &
    >>/dev/null 2>&1
    return
  fi

  local last_check_timestamp=$(cat $log_last_check)
  if [ -z "$last_check_timestamp" ]; then
    echo "$(timestamp)" | sudo tee $log_last_check >>/dev/null 2>&1
    return
  fi

  local lcts=$(timestamp_to_seconds $last_check_timestamp)
  if [ "$?" != "0" ]; then
    echo "$(timestamp)" | sudo tee $log_last_check >>/dev/null 2>&1
    return
  fi

  local now=$(date +%s)
  local delta=$((now - lcts))
  # will rm logs after 90 days
  # echo "delta: $delta"
  if [ $delta -gt $DAYS_SECONDS_90 ]; then
    # do clean
    log_clean # & >> /dev/null 2>&1
    # else
    # echo "[log_clean_check] no need clean"
  fi
}

log_clean() {
  # if [ ! -d $ZMICRO_LOG_PATH ]; then
  #   export ZMICRO_LOG_PATH=${LOG_CLEAN_DIR}
  # fi

  local LOG_CLEAN_DIR=$ZMICRO_LOG_PATH
  # if [ -d "$LOG_CLEAN_DIR" ]; then
  #   LOG_CLEAN_DIR=/var/log/zmicro
  # fi

  # if [ "$(string_match $LOG_CLEAN_DIR ^${/var/log/zmicro})"]; then
  #   LOG_CLEAN_DIR=/var/log/zmicro
  # fi

  echo "$LOG_CLEAN_DIR" | grep zmicro >>/dev/null 2>&1
  if [ "$?" != "0" ]; then
    LOG_CLEAN_DIR=/var/log/zmicro
  fi

  local LOG_CLEAN_BACKUP_FILE=${LOG_CLEAN_DIR}/backup.$(date +%Y-%m-%d_%H_%M_%S).gz
  log_debug "[timestamps][log_clean] clean logs dir: ${ZMICRO_LOG_PATH}"

  # backup
  log_debug "[timestamps][log_clean] backup ${LOG_CLEAN_BACKUP_FILE}"
  sudo tar -zcvf ${LOG_CLEAN_BACKUP_FILE} --exclude '*.gz' ${LOG_CLEAN_DIR} >>/dev/null 2>&1
  if [ -f "$LOG_CLEAN_BACKUP_FILE" ]; then
    # @TODO safe
    sudo rm -rf ${LOG_CLEAN_DIR}/*.log >>/dev/null 2>&1
    # sudo rm -rf /var/log/zmicro/*.log >> /dev/null 2>&1
  fi

  # retimestamp
  local log_last_check=$ZMICRO_LOG_PATH/.last_clean
  echo "$(timestamp)" | sudo tee $log_last_check >>/dev/null 2>&1
}

export -f log_init

export -f log_clean_check
export -f log_clean

export -f log
export -f log_success
export -f log_debug
export -f log_error
export -f log_info
export -f log_warn

export -f log_timestamp

export -f log_command
export -f log_update
export -f log_version

export -f log_plugin_update_lock
