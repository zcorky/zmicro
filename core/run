#!/bin/bash

run() {
  local base_command_path=$1
  local command=$2
  local sub_command=$3

  # register plugins commands
  # plugin::register_all

  log::debug ""
  log::debug "[$(timestamp)][command] base command path: $base_command_path"
  log::debug "[$(timestamp)][command] run: ${@:2}"
  log::debug "[$(timestamp)][command]"

  if [ -z "$2" ] || [ "$2" = "help" ] || [ "$2" = "--help" ]; then
    run::help "$1" "" ""
    exit 0
  fi

  # Get Command
  log::debug "[$(timestamp)][command]"
  log::debug "[$(timestamp)][command] get command path start: $@ ..."
  local command_path_with_pos=$(commander::get_command_path "$@")
  if [ -z "$command_path_with_pos" ]; then
    echo -e "No such command(1): $(color::red ${@:2}). use --help for help"
    exit 1
  fi

  local command_dir=$(echo $command_path_with_pos | awk -F ':' '{print $1}')
  local command_name=$(echo $command_path_with_pos | awk -F ':' '{print $2}')
  local command_pos=$(echo $command_path_with_pos | awk -F ':' '{print $3}')

  local command_raw=${@:2:$command_pos}
  local command_args=${@:$command_pos}

  log::debug "command_path_with_pos: $command_path_with_pos"
  log::debug "command_dir: => $command_dir"
  log::debug "command_name: => $command_name"
  log::debug "command_args: => $command_args (pos: $command_pos)"

  if [ -z "$command_name" ]; then
    run::help "$command_dir" "$command_name" "$command_raw"
    exit 1
  fi

  $command_dir/$command_name "$command_args"

  # log::command "$command_path"
}

run::js() {
  local script=$1
  local args=${@:2}

  if [ -z "$script" ]; then
    log::error "js script is required"
    exit 1
  fi

  # ZMICRO_NVM
  if [ -z "$NODE_HOME" ]; then
    if [ -s "$ZMICRO_HOME/plugins/nvm/source" ]; then
      \. $ZMICRO_HOME/plugins/nvm/source
    else
      export NODE_HOME=/usr/local/node
      export NODE_USER_HOME=$HOME/.node
      export PATH=$NODE_USER_HOME/bin:$NODE_HOME/bin:$PATH
    fi
  fi

  if [ "$(os::is_nodejs_installed)" = "false" ]; then
    log::info "[$(timestamp)] nodejs is not installed, installing ..."
    zpackage install nodejs
  fi

  # @TODO
  if [ "$(net::is_google_visitable)" = "false" ]; then
    export NPM_CONFIG_REGISTRY=https://registry.npmmirror.com
  fi

  # node $script $args
  node "$@"
}

run::deno() {
  local script=$1
  local args=${@:2}

  if [ -z "$script" ]; then
    log::error "deno script is required"
    exit 1
  fi

  # ZMICRO_DVM
  if [ -z "$DENO_HOME" ]; then
    export DENO_HOME=/usr/local/deno
    export DENO_USER_HOME=$HOME/.deno
    export PATH=$DENO_USER_HOME/bin:$DENO_HOME/bin:$PATH
  fi

  is_deno_installed() {
    which deno >>/dev/null 2>&1
    if [ "$?" = "0" ]; then
      echo "true"
    else
      echo "false"
    fi
  }

  if [ "$(is_deno_installed)" = "false" ]; then
    log::info "[$(timestamp)] deno is not installed, installing ..."
    zpackage install deno
  fi

  # deno $script $args
  deno run --allow-all $@
}

run::go() {
  local script=$1
  local args=${@:2}

  if [ -z "$script" ]; then
    log::error "go script is required"
    exit 1
  fi

  # ZMICRO_DVM
  if [ -z "$GOHOME" ]; then
    if [ -s "$ZMICRO_HOME/plugins/gvm/source" ]; then
      \. $ZMICRO_HOME/plugins/gvm/source
    else
      export GOHOME=/usr/local/go
      export GOPATH=$HOME/.go
      export PATH=$GOHOME/bin:$GOPATH/bin:$PATH
    fi
  fi

  is_go_installed() {
    which go >>/dev/null 2>&1
    if [ "$?" = "0" ]; then
      echo "true"
    else
      echo "false"
    fi
  }

  if [ "$(is_go_installed)" = "false" ]; then
    log::info "[$(timestamp)] go is not installed, installing ..."
    zpackage install go
  fi

  # go $script $args
  go run $@
}

# run::zx runs scripts with zx
run::zx() {
  local script=$1
  local args=${@:2}

  if [ -z "$script" ]; then
    log::error "js script is required"
    exit 1
  fi

  # ZMICRO_NVM
  if [ -z "$NODE_HOME" ]; then
    if [ -s "$ZMICRO_HOME/plugins/nvm/source" ]; then
      \. $ZMICRO_HOME/plugins/nvm/source
    else
      export NODE_HOME=/usr/local/node
      export NODE_USER_HOME=$HOME/.node
      export PATH=$NODE_USER_HOME/bin:$NODE_HOME/bin:$PATH
    fi
  fi

  if [ "$(os::is_nodejs_installed)" = "false" ]; then
    log::info "[$(timestamp)] nodejs is not installed, installing ..."
    zpackage install nodejs
  fi

  # @TODO
  if [ "$(net::is_google_visitable)" = "false" ]; then
    export NPM_CONFIG_REGISTRY=https://registry.npmmirror.com
  fi

  if [ "$(os::is_zx_installed)" = "false" ]; then
    log::info "[$(timestamp)] zx is not installed, installing ..."
    pm::npm i -g zx
  fi

  # node $script $args
  zx "$@"
  if [ "$?" != "0" ]; then
    return 1
  fi
}

run::nodejs() {
  run::js "$@"
}

run::help() {
  local command_dir=$1
  local command_name=$2
  local command_raw=$3

  if [ -f "$command_dir/_help" ]; then
    $command_dir/_help
    exit 0
  fi

  if [ -f "$command_dir/help" ]; then
    $command_dir/help
    exit 0
  fi

  echo -e "No such command(2): $(color::red ${command_raw})\n"
  echo "Usage:"
  echo "  ${command_raw} [arguments...]"
  echo ""

  local help_commands=$(ls $command_dir)
  local help_command=""
  echo "Commands:"
  for help_command in $help_commands; do
    if [[ $help_command = _* ]]; then
      continue
    fi

    echo "    $help_command"
  done
}

export -f run

export -f run::help

export -f run::js
export -f run::deno
export -f run::go
export -f run::zx

export -f run::nodejs
