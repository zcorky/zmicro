#!/bin/bash

timestamp() {
  res=$(date "+%Y-%m-%d %H:%M:%S")
  echo $res
}

timestamp_to_seconds() {
  local text=$@
  if [ -z "$text" ]; then
    log_error "[timestamp_to_seconds] timestamp string is required"
    exit 1
  fi

  if [ "$(os_is_macos)" = "true" ]; then
    date -jf "%Y-%m-%d %H:%M:%S" "$text" +%s
    return
  fi

  date -d "$text" +%s
}

timestamp_gt() {
  local a=$1
  local b=$2

  echo "a: $a"
  echo "b: $b"

  if [ $a -gt $b ]; then
    echo "true"
  else
    echo "false"
  fi
}

timestamp_lt() {
  local a=$1
  local b=$2

  if [ $a -lt $b ]; then
    echo "true"
  else
    echo "false"
  fi
}

# in x minutes
# example: 5 2021-09-05 11:30:10
# example: 5 1630824627
timestamp_in_x_minutes() {
  local x_minutes=$1
  local text=${@:2}

  if [ -z "$x_minutes" ]; then
    log_error "[timestamp_recently] x_minutes is required"
    exit 1
  fi

  if [ -z "$text" ]; then
    log_error "[timestamp_recently] timestamp string | numver is required"
    exit 1
  fi

  local x_seconds=$((60 * $x_minutes))
  local ts=$text

  echo $text | grep ":" >>/dev/null 2>&1
  if [ "$?" = "0" ]; then
    ts=$(timestamp_to_seconds $text)
  fi

  local now=$(date +%s)
  local ts_5m_later=$(($ts + $x_seconds))

  timestamp_lt $now $ts_5m_later
}

# in 5 minutes
timestamp_recently() {
  timestamp_in_x_minutes 5 $@
}

export -f timestamp
export -f timestamp_to_seconds
export -f timestamp_gt
export -f timestamp_lt
export -f timestamp_in_x_minutes
export -f timestamp_recently
