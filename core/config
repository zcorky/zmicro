#!/bin/bash

config::load_file() {
  local CONFIG_FILE=$1

  if [ -z "$CONFIG_FILE" ]; then
    log::error "[config::load_file] config file path is required"
    exit 1
  fi

  if [ -f $CONFIG_FILE ]; then
    log::debug "[$(timestamp)][config::load_file]: $CONFIG_FILE"

    # \. $CONFIG_FILE
    . $CONFIG_FILE
  fi
}

config::load_dir() {
  CONFIG_DIR=$1
  CONFIG_FILES=$(ls $CONFIG_DIR)

  for CONFIG_FILE in $CONFIG_FILES; do
    # echo "load config: $CONFIG_FILE"

    config::load_file $CONFIG_DIR/$CONFIG_FILE
  done
}

config::load_mod() {
  local path=$1
  local mod_path=$path/mod
  if [ ! -f "$mod_path" ]; then
    log::error "[config::load_mod] path is required"
    exit 1
  fi

  config::load_file $mod_path

  if [ -z $VERSION ] && [ -z $PLUGIN_VERSION ]; then
    log::error "[config::load_mod] VERSION is required"
    exit 1
  fi

  # @TODO REMOVE next version
  export ZMICRO_VERSION=$VERSION
  export ZMICRO_DESCRIPTION=$DESCRIPTION
}

config::load_core_mod() {
  config::load_mod $ZMICRO_HOME
}

load_config() {
  # @TOREMOVE
  # Fix Old ZMICRORC
  # local old_home=$(config::get HOME)
  # if [ "$old_home" != "" ]; then
  #   log::debug "remove old config .zmicrorc"

  #   config::remove HOME
  #   config::remove BIN
  #   config::remove VERSION
  # fi

  CONFIG_PATH=$1
  if [ "$CONFIG_PATH" = "" ]; then
    log "load_config: Config Path is required"
    exit 1
  fi

  if [ ! -f $CONFIG_PATH ] && [ ! -d $CONFIG_PATH ]; then
    log "load_config: Config Path(${CONFIG_PATH}) not found"
    exit 1
  fi

  # config::load_core_mod

  if [ -f $CONFIG_PATH ]; then
    config::load_file $CONFIG_PATH
  elif [ -d $CONFIG_PATH ]; then
    config::load_dir $CONFIG_PATH
  else
    log "load_config: Invalid Config Path(${CONFIG_PATH})"
    exit 1
  fi
}

export -f config::load_file
export -f config::load_dir

export -f config::load_mod
export -f config::load_core_mod

export -f load_config
