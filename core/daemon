#!/bin/bash

daemon_get_service_name() {
  local name=$1
  if [ "$name" = "" ]; then
    log_error "name is required"
    exit 1
  fi

  echo "zmicro_${name}"
}

daemon_get_service_path() {
  local name=$1
  if [ "$name" = "" ]; then
    log_error "name is required"
    exit 1
  fi

  local service=$(daemon_get_service_name $1)
  echo "/etc/systemd/system/${service}.service"
}

daemon_is_service_exist() {
  local service_path=$(daemon_get_service_path $1)
  if [ ! -f $service_path ]; then
    echo "false"
  else
    echo "true"
  fi
}

daemon_logs() {
  local name=$1
  if [ "$name" = "" ]; then
    log_error "name is required"
    exit 1
  fi

  local service=$(daemon_get_service_name $1)
  if [ "$(daemon_is_service_exist $1)" = "false" ]; then
    log_error "daemon service($1) not found"
    exit 1
  fi

  while [[ $# -gt 0 ]]; do
    local key=$1
    local value=$2
    case $key in
      -f | --follow)
        set_var is_daemon_logs_follow true
        shift
        ;;
      *)
        if [ "$(string_match $key ^-)" = "true" ]; then
          log_error "[daemon_logs] unknown parameter \"$key\""
          exit 1
        fi
        
        shift
        ;;
    esac
  done

  if [ "$is_daemon_logs_follow" = "true" ]; then
    sudo journalctl -u $service -f
  else
    sudo journalctl -u $service -r
  fi
}

daemon_status() {
  local name=$1
  if [ "$name" = "" ]; then
    log_error "name is required"
    exit 1
  fi

  local service=$(daemon_get_service_name $1)
  if [ "$(daemon_is_service_exist $1)" = "false" ]; then
    log_error "daemon service($1) not found"
    exit 1
  fi

  sudo systemctl status $service
}

daemon_start() {
  local name=$1
  if [ "$name" = "" ]; then
    log_error "name is required"
    exit 1
  fi

  local service=$(daemon_get_service_name $1)
  if [ "$(daemon_is_service_exist $1)" = "false" ]; then
    log_error "daemon service($1) not found"
    exit 1
  fi

  sudo systemctl start $service
}

daemon_stop() {
  local name=$1
  if [ "$name" = "" ]; then
    log_error "name is required"
    exit 1
  fi

  local service=$(daemon_get_service_name $1)
  if [ "$(daemon_is_service_exist $1)" = "false" ]; then
    log_error "daemon service($1) not found"
    exit 1
  fi

  sudo systemctl stop $service
}

daemon_restart() {
  local name=$1
  if [ "$name" = "" ]; then
    log_error "name is required"
    exit 1
  fi

  local service=$(daemon_get_service_name $1)
  if [ "$(daemon_is_service_exist $1)" = "false" ]; then
    log_error "daemon service($1) not found"
    exit 1
  fi

  sudo systemctl restart $service
}

daemon_reload() {
  local name=$1
  if [ "$name" = "" ]; then
    log_error "name is required"
    exit 1
  fi

  local service=$(daemon_get_service_name $1)
  if [ "$(daemon_is_service_exist $1)" = "false" ]; then
    log_error "daemon service($1) not found"
    exit 1
  fi

  sudo systemctl reload $service
}

daemon_enable() {
  local name=$1
  if [ "$name" = "" ]; then
    log_error "name is required"
    exit 1
  fi

  local service=$(daemon_get_service_name $1)
  if [ "$(daemon_is_service_exist $1)" = "false" ]; then
    log_error "daemon service($1) not found"
    exit 1
  fi

  sudo systemctl enable $service
}

daemon_disable() {
  local name=$1
  if [ "$name" = "" ]; then
    log_error "name is required"
    exit 1
  fi

  local service=$(daemon_get_service_name $1)
  if [ "$(daemon_is_service_exist $1)" = "false" ]; then
    log_error "daemon service($1) not found"
    exit 1
  fi

  sudo systemctl disable $service
}

daemon_create() {
  local name=$1
  local command=${@:2}

  if [ "$name" = "" ] || [ "$command" = "" ]; then
    log_error "daemon service and command are required"
    exit 1
  fi

  if [ "$(daemon_is_service_exist $name)" = "true" ]; then
    local service_path=$(daemon_get_service_path $name)
    log_error "found daemon service(${name}), please it manual: ${service_path}"
    exit 1
  fi

  local service_name=$(daemon_get_service_name $name)
  local service_path=$(daemon_get_service_path $name)
  sudo touch $service_path
  sudo tee $service_path >>/dev/null <<EOF
[Unit]
Description=zmicro service - ${name}

[Service]
# EnvironmentFile=$HOME/.bashrc
Environment=ZMICRO_HOME=${ZMICRO_HOME}
# Environment=ZMICRO_BIN_PATH=${ZMICRO_BIN_PATH}
Environment=PATH=/usr/local/bin:${ZMICRO_HOME}/bin:${PATH}
ExecStart=${command}
Restart=on-failure
Type=simple

[Install]
WantedBy=multi-user.target 
EOF

  sudo systemctl daemon-reload
  sudo systemctl start $service_name

  log_success "daemon serice ${name} created"
}

daemon_remove() {
  local name=$1

  if [ "$name" = "" ]; then
    log_error "daemon service and command are required"
    exit 1
  fi

  local service_name=$(daemon_get_service_name $name)
  local service_path=$(daemon_get_service_path $name)
  if [ "$(daemon_is_service_exist $name)" = "false" ]; then
    log_error "daemon service(${name}) not found"
    exit 1
  fi

  sudo systemctl stop $service_name
  sudo rm $service_path
  sudo systemctl daemon-reload
  log_success "daemon serice ${name} removed"
}

export -f daemon_get_service_name
export -f daemon_get_service_path
export -f daemon_is_service_exist

export -f daemon_logs
export -f daemon_status
export -f daemon_start
export -f daemon_stop
export -f daemon_restart
export -f daemon_reload
export -f daemon_enable
export -f daemon_disable

export -f daemon_create
export -f daemon_remove
