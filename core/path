#!/bin/bash

get_current_path() {
  echo $(realpath $(dirname "$0"))
}

path::is_file() {
  path=$1
  if [ -f $path ]; then
    return 0
  fi

  return 1
}

path::is_dir() {
  path=$1
  if [ -d $path ]; then
    return 0
  fi

  return 1
}

path::basename() {
  local path=$1

  if [ "$path" = "" ]; then
    log::error "path is required"
    exit 1
  fi

  echo $(string::split_last_element '/' $path)
}

path::dirname() {
  local path=$1

  if [ "$path" = "" ]; then
    log::error "path is required"
    exit 1
  fi

  echo "/$(string::split_slice '/' $path 0 -1)"
}

path::join() {
  local str=$(array::join '/' $@)
  # echo $str
  echo $(string::replace $str '/\{2,\}' '/')
}

realpath() {
  OURPWD=$PWD
  cd "$(dirname "$1")"
  LINK=$(readlink "$(basename "$1")")
  while [ "$LINK" ]; do
    cd "$(dirname "$LINK")"
    LINK=$(readlink "$(basename "$1")")
  done
  REALPATH="$PWD/$(basename "$1")"
  cd "$OURPWD"
  echo "$REALPATH"
}

path::resolve() {
  local path=$1
  if [ -z "$path" ]; then
    log::error "[path::resolve] path is required"
    exit 1
  fi

  local first_char=$(string::first_char $path)
  if [ "$first_char" = "/" ]; then
    # /bin/zmicro
    echo $path
    return
  elif [ "${path:0:2}" = ".." ]; then
    # ../bin/zmicro
    echo $(path::join $(dirname $PWD) ${path:3})
    return
  elif [ "$first_char" = "." ]; then
    # ./bin/zmicro
    echo $(path::join $PWD ${path:2})
    return
  else
    echo $(path::join $PWD $path)
    return
  fi
}


export -f get_current_path
export -f path::is_file
export -f path::is_dir

export -f path::basename
export -f path::dirname
export -f path::join

export -f realpath

export -f path::resolve
