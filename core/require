#!/bin/bash

require() {
  local plugin_name=$1
  local plugin_version=$2
  local plugin_repo=$3
  local force_update=$IS_REQUIRE_MOD_UPDATE_TMP_GLOBAL

  if [ "$(zmicro plugin has $plugin_name)" = "true" ]; then
    log_debug "[$(timestamp)][require] installed before: ${plugin_name}"

    if [ "$force_update" = "true" ]; then
      log_info "[$(timestamp)][require] update: ${plugin_name}"
      zmicro plugin update $plugin_name
    fi
    return
  fi

  log_info "[$(timestamp)][require] install: $plugin_name ($plugin_version) ..."
  
  # @TODO
  zmicro plugin install $plugin_name $plugin_version $plugin_repo
  if [ "$?" = "0" ]; then
    log_success "[$(timestamp)][require] install success: ${plugin_name}"
  else
    log_error "[$(timestamp)][require] install failed: ${plugin_name}"
  fi
    
  sleep 1
}

require_parse() {
  # echo "xxx: $@"
  # compose@v0.0.1
  local text=$2

  # echo "IS_REQUIRE_MOD_UPDATE_TMP_GLOBAL: $IS_REQUIRE_MOD_UPDATE_TMP_GLOBAL"
  # echo "is_require_mod_update: $is_require_mod_update"

  local plugin_name=$(echo $text | awk -F '@' '{print $1}')
  local plugin_version=$(echo $text | awk -F '@' '{print $2}' | awk -F '#' '{print $1}')
  local plugin_repo=$(echo $text | awk -F '#' '{print $2}')

  # echo "[require_parse] ${plugin_name}(${plugin_version}) - ${plugin_repo}"
  # log_info "[$(timestamp)][require] install plugin $plugin_name ($plugin_version) ..."
  require $plugin_name $plugin_version $plugin_repo
}

require_mod() {
    # @TODO overide core DEPENDENCIES
  if [ -n ${DEPENDENCIES} ]; then
    # echo "overide DEPENDENCIES"
    DEPENDENCIES=()
  fi

  local mod_path=$1
  local is_require_mod_update=false

  shift
  while [[ $# -gt 0 ]]; do
    local key=$1
    local value=$2
    case $key in
      -u | --update)
        set_var is_require_mod_update true
        shift
        ;;
      *)
        if [ "$(string_match $key ^-)" = "true" ]; then
          log_error "[require_mod] ERROR: unknown parameter \"$key\""
          exit 1
        fi

        shift
        ;;
    esac
  done

  # @TODO cannot pass params in array_each, so use global instead of
  IS_REQUIRE_MOD_UPDATE_TMP_GLOBAL=$is_require_mod_update

  # load mod
  load_config_file $mod_path

  if [ -n $DEPENDENCIES ]; then
    local dependeny_count=$(array_length ${DEPENDENCIES[@]})
    if [ "$dependeny_count" = "0" ]; then
      return
    fi

    log_info "[$(timestamp)][require] found depdencies: ${dependeny_count} ..."

    array_each require_parse ${DEPENDENCIES[@]}

    # echo $DEPENDENCIES
    # for one in ${DEPENDENCIES[@]}; do
    #   echo "x: "$one
    # done

    # @TODO clean
    # export DEPENDENCIES=""
  fi
}

require_core_mod() {
  require_mod $ZMICRO_MOD $@
}

require_plugin_mod() {
  local plugin_name=$1
  if [ -z $plugin_name ]; then
    log_error "[require_plugin_mod] plugin name is required"
    exit 1
  fi

  # echo "plugin_name: $(plugin_mod_path $plugin_name)"
  # echo "${DEPENDENCIES[@]}"
  require_mod $(plugin_mod_path $plugin_name) $@
}

export -f require
export -f require_mod
export -f require_parse

export -f require_core_mod
export -f require_plugin_mod
