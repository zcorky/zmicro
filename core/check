#!/bin/bash

check::upgrade() {
  if [ "$ZMICRO_IS_UPGRADING" = "true" ] || [ "$ZMICRO_IS_UPGRADING_CHECKING" = "true" ]; then
    return
  fi

  if [ -f "$ZMICRO_LOG_UPDATE_TIMESTAMP_LOCK" ]; then
    local lock_time=$(cat $ZMICRO_LOG_UPDATE_TIMESTAMP_LOCK 2>/dev/null)
    local now=$(date +%s)
    # in 5 minutes
    if [ -n "$lock_time" ] && [ "$((now - lock_time))" -lt "300" ]; then
      return
    fi
  fi

  # lock
  export ZMICRO_IS_UPGRADING_CHECKING=true
  echo $(date +%s) >$ZMICRO_LOG_UPDATE_TIMESTAMP_LOCK

  local should_upgrade=false
  if [ ! -f "$ZMICRO_LOG_UPDATE_TIMESTAMP" ]; then
    should_upgrade=true
  else
    local last_update=$(cat $ZMICRO_LOG_UPDATE_TIMESTAMP 2>/dev/null)
    if [ -z "$last_update" ]; then
      should_upgrade=true
    else
      local now=$(date +%s)
      local delta=$((now - last_update))
      if [ "$?" != "0" ]; then
        delta=0
      fi

      # max days
      if [ "$delta" -gt "$ZMICRO_CHECK_UPGRADE_MAX_DAYS" ]; then
        should_upgrade=true
      fi
    fi
  fi

  # if NO_LOG found, not upgrade
  if [ "$NO_LOG" = "true" ]; then
    should_upgrade=false
  fi

  if [ "$should_upgrade" = "true" ]; then
    if [ -n "$NO_LOG" ]; then
      zmicro update >>/dev/null 2>&1
    else
      log::warn "[$(timestamp)] zmicro version($(version::zmicro)) is too old to run, upgrading now ..."
      log::info "[$(timestamp)] upgrading zmicro ..."
      zmicro update
      log::success "[$(timestamp)] upgrade zmicro done, run the command."
    fi
  fi

  # release lock
  rm -rf $ZMICRO_LOG_UPDATE_TIMESTAMP_LOCK
  export ZMICRO_IS_UPGRADING_CHECKING=false
}

export -f check::upgrade
