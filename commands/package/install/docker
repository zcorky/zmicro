#!/bin/bash
DEFAULT_NETWORK=ingress
COMPOSE_BIN_PATH=/usr/bin/docker-compose
COMPOSE_VERSION=1.29.1

TMP_INSTALL_SCRIPT=/tmp/get-docker.sh

# Returning a boolean from a bash function
#   [Solved]: Stack Overflow: https://stackoverflow.com/questions/5431909/returning-a-boolean-from-a-bash-function
#
is_docker_installed() {
  if [ ! -f $COMPOSE_BIN_PATH ]; then
    log_debug "[is_docker_installed] Docker Compose not found"
    return 1
  fi

  CURRENT_COMPOSE_VERSION=$(docker-compose version --short)
  if [ "$CURRENT_COMPOSE_VERSION" != "$CURRENT_COMPOSE_VERSION" ]; then
    log "Docker Compose version is not (${COMPOSE_VERSION})"
    return 1
  fi

  DOCKER_VERSION=$(get_docker_version)
  log "Docker(${DOCKER_VERSION}) already installed with Compose(${COMPOSE_VERSION})"
  return 0
}

get_docker_version() {
  echo $(docker version -f {{.Client.Version}})
}

is_network_exist() {
  sudo docker network inspect $DEFAULT_NETWORK >>/dev/null 2>&1
  return $?
}

create_network() {
  # sudo docker network inspect $DEFAULT_NETWORK >>/dev/null 2>&1
  # if [ "$?" != "0" ]; then
  #   sudo docker network create $DEFAULT_NETWORK
  # fi

  if ! is_network_exist; then
    log "Create Network: ${DEFAULT_NETWORK}"
    sudo docker network create $DEFAULT_NETWORK >> /dev/null 2>&1
  fi
}

try_to_remove_podman() {
  which podman >>/dev/null 2>&1
  if [ "$?" = "0" ]; then
    log "Found podman, removing ..."
    pm remove -y podman
    sudo rm -rf `which docker`

    log "Upgrade Docker ..."
  fi
}

install_docker_core() {
  sudo curl -fsSL https://get.docker.com -o $TMP_INSTALL_SCRIPT
  sudo sh $TMP_INSTALL_SCRIPT

  sudo usermod -aG docker $USER
}

install_docker_compose() {
  sudo curl -L "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o $COMPOSE_BIN_PATH
  sudo chmod +x $COMPOSE_BIN_PATH
}

start_docker() {
  sudo systemctl enable docker
  sudo systemctl start docker
}

clean() {
  sudo rm $TMP_INSTALL_SCRIPT
}

install_docker() {
  if [ "$(os_is_docker)" = "true" ]; then
    log_warn "You are in docker env, use bind /var/run/docker.sock instead of."
    return 
  fi

  log "Install Docker ..."

  try_to_remove_podman

  # Returning a boolean from a bash function
  #   Useage
  if is_docker_installed; then
    create_network
    exit 0
  fi

  install_docker_core

  log "Install Docker Compose ..."
  install_docker_compose

  log "Start Docker daemon ..."
  start_docker
  
  create_network

  # Clean
  clean
}

install_docker