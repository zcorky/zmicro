#!/bin/bash

. $ZMICRO_HOME/core/env

update_zmicro() {
  local origin_version=$(get_current_version)
  log_update PREV

  cd $ZMICRO_HOME
  git pull origin master >> $ZMICRO_LOG_UPDATE_PATH 2>&1
  if [ "$?" != "0" ]; then
    echo "Update ZMicro Error, see $ZMICRO_LOG_UPDATE_PATH"
    exit -1
  fi

  log_update LATEST
  local new_version=$(get_current_version)

  if [ "$origin_version" != "$new_version" ]; then
    log "Update Success. Version: $new_version"
  else
    log "No Changes. Version: $new_version"
  fi

  # log_timestamp "[LATEST_VERSION] ${ZMICRO_VERSION}"

  # Auto Register After Update
  plugin_register_all $ZMICRO_PLUGIN_PATH
}

help() {
  echo "update zmicro"
  echo ""
  echo "Usage:"
  echo "  zmicro update [...options]"
  echo "    -p, --plugin <plugin_name | all> Update all or one plugin"
}

core() {
  if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    help
    exit 0
  fi

  while [[ $# -gt 0 ]]; do
    local key=$1
    local value=$2
    case $key in
      -h | --help)
        help
        exit 0
        ;;
      -p | --plugin)
        if [ -z "$value" ]; then
          log_error "plugin name is required"
          exit 1
        fi

        set_var plugin_name $value
        shift
        shift
        ;;
      *)
        if [ "$(string_match $key ^-)" = "true" ]; then
          echo "ERROR: unknown parameter \"$key\""
          help
          exit 1
        fi

        shift
        ;;
    esac
  done

  if [ "$plugin_name" ]; then
    zmicro plugin update $plugin_name
  else
    update_zmicro
  fi
}

run() {
  core $@
}

run $@

