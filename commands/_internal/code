#!/bin/bash

help() {
  echo "Usage:"
  echo "  zmicro code <where>"
}

core() {
  which code >>/dev/null 2>&1
  if [ "$?" != "0" ]; then
    log::error "you should install vscode and install 'code' command in PATH"
    log::info "How to install 'code' command in PATH: https://code.visualstudio.com/docs/setup/mac"
    exit 1
  fi

  local where=$1
  local name=$2
  if [ "$where" = "-h" ] || [ "$where" = "--help" ]; then
    help
    exit 1
  fi

  if [ -z "$where" ]; then
    where="home"
  fi

  # # where => default plugin when name exist
  # # zmicro go package
  # #   => zmicro go plugin package
  # if [ -n "$where" ] && [ "$where" != "home" ] && [ "$where" != "plugin" ] && [ "$where" != "service" ] && [ "$where" != "package" ]; then
  #   where="plugin"
  #   name=$1
  # fi

  # echo "where: $where"
  # echo "name: $name"

  # fix permissions
  os::fix_permissions

  case $where in
  home)
    cd $ZMICRO_HOME
    code .
    ;;
  plugin)
    if [ -z "$name" ]; then
      log::error "plugin name is required"
      exit 1
    fi

    local plugin_path=$ZMICRO_HOME/plugins/$name
    if [ ! -d $plugin_path ]; then
      log::error "plugin (${name}) not found"
      exit 1
    fi

    cd $plugin_path
    code .
    ;;
  service)
    local path=$ZMICRO_HOME/plugins/${where}
    if [ ! -d $path ]; then
      log::error "plugin(${where}) not found (1)"
      exit 1
    fi

    if [ -n "$name" ]; then
      path=$path/${where}s/$name
    fi
    if [ ! -d $path ]; then
      log::error "${where}(${name}) not found"
      exit 1
    fi

    cd $path
    code .
    ;;
  package)
    local path=$ZMICRO_HOME/plugins/${where}
    if [ ! -d $path ]; then
      log::error "package(${where}) not found (2)"
      exit 1
    fi

    if [ -n "$name" ]; then
      path=$path/${where}s/$name
    fi
    if [ ! -d $path ]; then
      log::error "${where}(${name}) not found"
      exit 1
    fi

    cd $path
    code .
    ;;
  template)
    local path=$ZMICRO_HOME/plugins/${where}
    if [ ! -d $path ]; then
      log::error "template(${where}) not found (2)"
      exit 1
    fi

    if [ -n "$name" ]; then
      path=$path/${where}s/$name
    fi
    if [ ! -d $path ]; then
      log::error "${where}(${name}) not found"
      exit 1
    fi

    cd $path
    code .
    ;;
  action)
    local path=$ZMICRO_HOME/plugins/${where}
    if [ ! -d $path ]; then
      log::error "action(${where}) not found (2)"
      exit 1
    fi

    if [ -n "$name" ]; then
      path=$path/${where}s/$name
    fi
    if [ ! -d $path ]; then
      log::error "${where}(${name}) not found"
      exit 1
    fi

    cd $path
    code .
    ;;
  desktop)
    local path=$ZMICRO_HOME/plugins/${where}
    if [ ! -d $path ]; then
      log::error "desktop(${where}) not found (2)"
      exit 1
    fi

    if [ -n "$name" ]; then
      path=$path/${where}s/$name
    fi
    if [ ! -d $path ]; then
      log::error "${where}(${name}) not found"
      exit 1
    fi

    cd $path
    code .
    ;;
  *)
    # fallback to plugin
    name=$where

    if [ -z "$name" ]; then
      log::error "plugin name is required"
      exit 1
    fi

    local plugin_path=$ZMICRO_HOME/plugins/$name
    if [ ! -d $plugin_path ]; then
      log::error "plugin (${name}) not found (3)"
      exit 1
    fi

    cd $plugin_path
    code .
    ;;
  esac
}

run() {
  core $@
}

run $@
