#!/bin/bash

. $ZMICRO_HOME/core/env

help() {
  echo "Usage:"
  echo "  zmicro go <where>"
}

core() {
  local where=$1
  local name=$2
  if [ "$where" = "-h" ] || [ "$where" = "--help" ]; then
    help
    exit 1
  fi

  if [ -z "$where" ]; then
    where="home"
  fi

  # where => default plugin when name exist
  # zmicro go package
  #   => zmicro go plugin package
  if [ -n "$where" ] && [ "$where" != "plugin" ] && [ "$where" != "service" ] && [ "$where" != "package" ]; then
    where="plugin"
    name=$1
  fi

  # echo "where: $where"
  # echo "name: $name"

  case $where in
    home)
      cd $ZMICRO_HOME
      exec $SHELL
      ;;
    plugin)
      if [ -z "$name" ]; then
        log::error "plugin name is required"
        exit 1
      fi

      local plugin_path=$ZMICRO_HOME/plugins/$name
      if [ ! -d $plugin_path ]; then
        log::error "unknown plugin ${name}"
        exit 1
      fi

      cd $plugin_path
      exec $SHELL
      ;;
    service)
      if [ -z "$name" ]; then
        log::error "${where} name is required"
        exit 1
      fi

      local path=$ZMICRO_HOME/plugins/$where/${$where}s/$name
      if [ ! -d $path ]; then
        log::error "unknown ${where} ${name}"
        exit 1
      fi

      cd $path
      exec $SHELL
      ;;
    package)
      if [ -z "$name" ]; then
        log::error "${where} name is required"
        exit 1
      fi

      local path=$ZMICRO_HOME/plugins/$where/${$where}s/$name
      if [ ! -d $path ]; then
        log::error "unknown ${where} ${name}"
        exit 1
      fi

      cd $path
      exec $SHELL
      ;;
    *)
      log::error "unknown go where: $where"
      ;;
  esac
}

run() {
  core $@
}

run $@
