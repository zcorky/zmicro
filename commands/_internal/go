#!/bin/bash

help() {
  echo "Usage:"
  echo "  zmicro go <WHERE> [NAME] [MODULE]"
  echo ""
  echo "WHERE:"
  echo "  home - open zmicro home"
  echo "  plugin - open plugin"
  echo "  service - open service"
  echo "  package - open package"
  echo ""
  echo "NAME:"
  echo "  plugin/service/package name"
  echo ""
  echo "MODULE:"
  echo "  config - open config"
  echo "  data   - open data"
  echo "  log    - open log"
}

core() {
  local where=$1
  local name=$2
  local module=$3
  if [ "$where" = "-h" ] || [ "$where" = "--help" ]; then
    help
    exit 1
  fi

  if [ -z "$where" ]; then
    where="home"
  fi

  # # where => default plugin when name exist
  # # zmicro go package
  # #   => zmicro go plugin package
  # if [ -n "$where" ] && [ "$where" != "home" ] && [ "$where" != "plugin" ] && [ "$where" != "service" ] && [ "$where" != "package" ]; then
  #   where="plugin"
  #   name=$1
  # fi

  # echo "where: $where"
  # echo "name: $name"

  # @TODO
  #   zmicro go plugin service ... => zmicro go service ...
  if [ "$name" = "service" ] || [ "$name" = "package" ]; then
    where=$name
    name=$module
    module=$4
  fi

  case $where in
  home)
    cd $ZMICRO_HOME
    exec $SHELL
    ;;
  plugin)
    if [ -z "$name" ]; then
      log::error "plugin name is required"
      exit 1
    fi

    local plugin_path=$ZMICRO_HOME/plugins/$name
    if [ ! -d $plugin_path ]; then
      log::error "plugin (${name}) not found"
      exit 1
    fi

    if [ "$module" = "config" ]; then
      cd $ZMICRO_PLUGINS_CONFIGS_PATH/$name
    elif [ "$module" = "data" ]; then
      cd $ZMICRO_PLUGINS_DATA_PATH/$name
    elif [ "$module" = "log" ]; then
      cd $ZMICRO_PLUGINS_LOGS_PATH/$name
    else
      cd $plugin_path
    fi

    exec $SHELL
    exit 0
    ;;
  service)
    local path=$ZMICRO_HOME/plugins/${where}
    if [ ! -d $path ]; then
      log::error "plugin(${where}) not found (1)"
      exit 1
    fi

    if [ -n "$name" ]; then
      path=$path/${where}s/$name
    fi
    if [ ! -d $path ]; then
      log::error "${where}(${name}) not found"
      exit 1
    fi

    if [ "$module" = "config" ]; then
      cd $ZMICRO_PLUGINS_CONFIGS_PATH/service/config/$name
    elif [ "$module" = "data" ]; then
      cd $ZMICRO_PLUGINS_DATA_PATH/service/$name
    elif [ "$module" = "log" ]; then
      cd $ZMICRO_PLUGINS_LOGS_PATH/service/$name
    else
      cd $path
    fi

    exec $SHELL
    exit 0
    ;;
  package)
    local path=$ZMICRO_HOME/plugins/${where}
    if [ ! -d $path ]; then
      log::error "package(${where}) not found (2)"
      exit 1
    fi

    if [ -n "$name" ]; then
      path=$path/${where}s/$name
    fi
    if [ ! -d $path ]; then
      log::error "${where}(${name}) not found"
      exit 1
    fi

    if [ "$module" = "config" ]; then
      cd $ZMICRO_PLUGINS_CONFIGS_PATH/package/$name
    elif [ "$module" = "data" ]; then
      cd $ZMICRO_PLUGINS_DATA_PATH/package/$name
    elif [ "$module" = "log" ]; then
      cd $ZMICRO_PLUGINS_LOGS_PATH/package/$name
    else
      cd $path
    fi

    exec $SHELL
    exit 0
    ;;
  *)
    # fallback to plugin
    name=$where

    if [ -z "$name" ]; then
      log::error "plugin name is required"
      exit 1
    fi

    local plugin_path=$ZMICRO_HOME/plugins/$name
    if [ ! -d $plugin_path ]; then
      log::error "plugin (${name}) not found (3)"
      exit 1
    fi

    cd $plugin_path
    exec $SHELL
    ;;
  esac
}

run() {
  core $@
}

run $@
