#!/bin/bash

help() {
  echo "Usage:"
  echo "  zmicro proxy <ip>"
  echo ""
  echo "Action:"
  echo "  set           Set proxy config"
  echo "  get           Get proxy config"
  echo "  remove        Remove proxy config"
  echo ""
  echo "  apply         Apply proxy"
  echo "  exit          Exit proxy"
  echo ""
  echo "  activate      Activate proxy, same as apply"
  echo "  deactivate    Unset proxy, same as exit"
  echo ""
  echo "  status         Get status of proxy"
  echo ""
  echo "Example:"
  echo "    zmicro proxy get"
  echo "    zmicro proxy apply"
  echo "    zmicro proxy activate"
  echo "    zmicro proxy deactivate"
  echo "    zmicro proxy set 127.0.0.1 17890"
}

core() {
  if [ "$1" = "-h" ] || [ "$1" = "--help" ] || [ "$1" = "" ]; then
    help
    exit 0
  fi

  local action=$1
  case "$action" in
  set)
    local ip=$2
    local port=$3
    if [ -z "$ip" ]; then
      log::error "[$(timestamp)] proxy ip is required"
      exit 1
    fi

    if [ -z "$port" ]; then
      log::error "[$(timestamp)] proxy port is required"
      exit 1
    fi

    config::set PROXY_IP $ip
    config::set PROXY_PORT $port

    zmicro proxy apply
    return
    ;;
  get)
    local ip=$(config::get PROXY_IP)
    local port=$(config::get PROXY_PORT)

    echo "PROXY_IP: $ip"
    echo "PROXY_PORT: $port"
    return
    ;;
  remove)
    config::remove PROXY_IP
    config::remove PROXY_PORT
    log::success "You have removed proxy config."
    ;;
  exit | deactivate)
    if [ -z "$HTTPS_PROXY" ]; then
      log::info "You have not in proxy."
      return
    fi

    # zmicro proxy remove
    unset HTTPS_PROXY
    unset HTTP_PROXY
    unset ALL_PROXY
    unset https_proxy
    unset http_proxy
    unset all_proxy

    log::success "You have removed proxy commandline."
    exec $SHELL
    return
    ;;
  apply | activate)
    # already running
    if [ "$HTTPS_PROXY" = "http://$ip:$port" ]; then
      log::info "You have already applied proxy commandline."
      return
    fi

    # use smart proxy
    net::using_smart_proxy

    # fix manpath: can't set the locale; make sure $LC_* and $LANG are correct
    export LC_CTYPE=en_US.UTF-8
    export LC_ALL=en_US.UTF-8
    export LANG=en_US.UTF-8

    # @TODO apply in new shell
    #   @TODO can apply current shell ???
    log::success "You have applied proxy commandline."

    exec $SHELL
    ;;
  status)
    if [ -n "$HTTPS_PROXY" ]; then
      echo "in proxy"
    else
      echo "not in proxy"
    fi
    ;;
  *)
    # proxy command
    local command=$1
    local args=${@:2}
    if [ -z "$command" ]; then
      log::error "[$(timestamp)] command is required"
      exit 1
    fi

    which $command >>/dev/null 2>/dev/null
    if [ "$?" != "0" ]; then
      log::error "[$(timestamp)] command($command) not found"
      exit 1
    fi

    # use smart proxy
    net::using_smart_proxy

    # log
    log::debug "Run command with Proxy($PROXY_IP:$PROXY_PORT) ..."

    # fix manpath: can't set the locale; make sure $LC_* and $LANG are correct
    export LC_CTYPE=en_US.UTF-8
    export LC_ALL=en_US.UTF-8
    export LANG=en_US.UTF-8

    case $command in
    ssh)
      os::ssh $args
      ;;
    *)
      exec $command $args
      ;;
    esac
    ;;
  esac
}

run() {
  core "$@"
}

run "$@"
