#!/bin/bash

required() {
  if [ "$1" = "" ]; then
    echo false
  else
    echo true
  fi
}

help() {
  echo "Usage:"
  echo "  zmicro release"
  echo ""
}

core() {
  if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    help
    exit 0
  fi

  # is plugin release
  if [ "$1" != "" ]; then
    if [ "$1" = "." ] && [ "$PWD" = "$ZMICRO_HOME" ]; then
      # break
      echo "release zmicro" >>/dev/null
    else
      zmicro plugin release "$@"
      return
    fi
  fi

  local origin_version=$(version::zmicro)
  local default_new_version=$(version::next $origin_version)

  local is_valid="false"
  while [ "$is_valid" = "false" ]; do
    # inquirer::text "input new version(origin: ${origin_version}):" new_version "" "version is required" required
    os::inquirer new_version "text" "input new version(origin: ${origin_version}):" "$default_new_version"
    is_valid=$(version::is_valid $new_version)

    if [ "$is_valid" = "false" ]; then
      log::error "${new_version} is not valid version, should be x.y.z"
    fi

    if [ "$(version::compare_gt $new_version $origin_version)" = "false" ]; then
      log::error "${new_version} is not greater than ${origin_version}"
      is_valid="false"
    fi
  done

  sed -i -e "s/${origin_version}/$new_version/" mod >>/dev/null 2>&1

  #@TODO mod-e file occurred
  if [ -f "mod-e" ]; then
    rm mod-e >>/dev/null 2>&1
  fi

  git add mod
  git commit -m "chore(release): bumped version to ${new_version}"
  git tag ${new_version}
  git push origin ${new_version}
  git push origin master

  log::success "[release] ${plugin_name} ${new_version}"
}

run() {
  core $@
}

run $@
