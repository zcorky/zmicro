#!/bin/bash

# set -x

# https://unix.stackexchange.com/questions/76162/how-do-i-capture-the-return-status-and-use-tee-at-the-same-time-in-korn-shell/76171
# http://www.ruanyifeng.com/blog/2017/11/bash-set.html

export ZMICRO_HOME=${ZMICRO_HOME:-"/usr/local/lib/zmicro"}

# @FIX cron command not found
# zmicro
export PATH=$ZMICRO_HOME/bin:$PATH
# node
export PATH=$HOME/.node/bin:$PATH
# go
export PATH=$HOME/.go/bin:$PATH
# common
export PATH=$PATH:/usr/local/bin:/usr/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/sbin:/bin:/sbin

# @TODO fix sudo in docker
command -v sudo >>/dev/null 2>&1
if [ $? -ne 0 ]; then
  sudo() {
    eval "$@"
  }
  chown() {
    echo "ignore chown" >>/dev/null 2>&1
  }
  tput() {
    echo "ignore tput" >>/dev/null 2>&1
  }

  export -f sudo
  export -f chown
  export -f tput
fi

is_run_init() {
  if [ "$1" = "init" ]; then
    echo "true"
  else
    echo "false"
  fi
}

safe_update_background() {
  # run after 15s
  sleep 15
  cd $ZMICRO_HOME
  git pull origin master
}

export ZMICRO_CORE_PATH=$ZMICRO_HOME/core
export ZMICRO_BIN_PATH=$ZMICRO_HOME/bin
export PATH=$ZMICRO_BIN_PATH:$PATH

# safe strategy for update
#   which will update self correct even if core is broken
action=$1
if [ "$action" = "update" ]; then
  safe_update_background >>/dev/null 2>&1 &
fi

. $ZMICRO_CORE_PATH/env

# if [ ! -w "$ZMICRO_APP_CONFIGS_PATH" ]; then
#   # @TODO
#   sudo chown -R $USER $ZMICRO_APP_CONFIGS_PATH
# fi

# if [ ! -w "$ZMICRO_APP_DATA_PATH" ]; then
#   # @TODO
#   sudo chown -R $USER $ZMICRO_APP_DATA_PATH
# fi

# @TODO
log::clean_check # & >> /dev/null 2>&1

# # INIT with ZMICRO_HOME
# if [ "$(is_run_init $1)" = "true" ]; then
#   $ZMICRO_COMMANDS_PATH/_internal/init | tee -a $ZMICRO_LOG_COMMON_PATH
# fi

# @TODO check update
if [ "$1" != "update" ] && [ "$1" != "upgrade" ]; then
  check::upgrade
fi

# @TODO
#  1. AS A Executor: #!/usr/bin/env zmicro
#  2. Execute Local Script: zmicro ./xxx.sh
echo $@ | grep "^/" >/dev/null
if [ "$?" = "0" ]; then
  bash $@
else
  run $ZMICRO_COMMANDS_PATH $ZMICRO_PLUGINS_PATH $@
fi
